Please answer the below core-java Questions:

What is programing language?
A. A programming language is a vocabulary and set of grammatical rules for instructing a computer or computing device to perform specific tasks.
   The term programming language usually refers to high-level languages, such as BASIC, C, C++, COBOL, Java, FORTRAN, Ada, and Pascal.
   Each programming language has a unique set of keywords (words that it understands) and a special syntax for organizing program instructions.

What jdk contains or composed of and define each components?
A.
JDK: Java Development Kit  is Kit which provides the environment to develop and execute(run) the Java program. JDK is a kit(or package) which includes two things
1. Development Tools- to provide an environment to develop the java programs.
2. JRE - to execute your java program.

What is IDE?
A.
Integrated Development Environment.


What are the IDEs available in the market to support java?
A.
There are many IDEs available in the market, the top most popular Java Coding, Development & Programming IDEs are

NetBeans.
Eclipse.
IntelliJ IDEA Community Edition.
Android Studio.
Enide Studio 2014.
BlueJ.
jEdit.
jGRASP.



Explain the entire java life cycle.
A.
Life cycle of a java program tells us what happens right from the point when we type source code in a text editor to the point that source code is converted into machine code (0’s and 1’s).

There are three main stages in the life cycle of a java program. They are:

Editing the program
Compiling the source code
Executing the byte code

First, we will start with typing the program in a text-editor. After completing editing of the program, we have to save the file. While saving the file we must be saved the file with .java extension.
For example, I had written a Java program which contains a single class Sample. It is a good convention to save the file with the name of the class. So, as per my example, the file will be saved as Sample.java.

Second step is compilation. The name of the Java compiler is javac. The input to the compiler is Java source code which is available in Sample.java. The output of the compiler is machine independent or platform independent code which is known as bytecode.
The file which is generated after compilation is .class file. As per my example, the bytecode file will be Sample.class.

Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.

what is class?
A.A java class can be defined as a template or blueprint which describes state or  behavior of it's object.
A class is declared by using the keyword "class".
Ex: public class Sample{ }

What is object?
A. Object are the instance of class. A single class can create any number of unique objects.

What is the entry point of an application?

A. The main method is the entry point of a java application. Specifically、when the Java Virtual Machine is told to run an application by specifying its class,
 (by using the java application launcher), it will look for the main method with the signature of public static void main(String[]) .

Why main is static?
A.  Java program's main method has to be declared static because keyword static allows main to be called without creating an object of the class in which the main method is defined.

Which class is the superclass of all classes?
A. Object is the superclass of all classes. And it is super class of any class by default.

What is difference between path and classpath variables?
A. 1. Path is an environment variable which is used by the operating system to find the executables.
   2. Classpath is an environment variable which is used by the Java compiler to find the path, of classes.ie in J2EE we give the path of jar files.
   PATH is nothing but setting up an environment for operating system.

What is the difference between an Interface and Abstract class?
A. - Main difference is methods of a Java interface are implicitly abstract and cannot have implementations. A Java abstract class can have instance methods that implements a default behavior.
   - Variables declared in a Java interface is by default final. An  abstract class may contain non-final variables.
   - Members of a Java interface are public by default. A Java abstract class can have the usual flavors of class members like private, protected, etc..
   - Java interface should be implemented using keyword “implements”; A Java abstract class should be extended using keyword “extends”.
   - An interface can extend another Java interface only, an abstract class can extend another Java class and implement multiple Java interfaces.
   - A Java class can implement multiple interfaces but it can extend only one abstract class.
   - Interface is absolutely abstract and cannot be instantiated; A Java abstract class also cannot be instantiated, but can be invoked if a main() exists.
   - In comparison with java abstract classes, java interfaces are slow as it requires extra indirection.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. No we can't make an Object from an Interface and Abstract class.
For interface, we must create a class which implement the interface and implement bodies of interface methods.

what is Access Specifier?
A. Access specifiers are used to control the visibility of members like classes, variables and methods.
There are three access specifiers: public, private and protected.

What is OOP ? Define each feature of java OOP.
A. Object Oriented Programming.
What is Java Package and which package is imported by default?
What is API? Name list of API that you have used so far.
Does java support multiple inheritance, explain why or why not?
What is method overloading and when it happens?
Explain exceptions in java and how to handle it.
What is static keyword in java? How it has been used in variables and methods ?
What is final and how it has been used variables and methods?
What is final, finally and finalize?
What is a constructor ?
Can we have multiple constructors in a class?
If we don't have a constructor declared, what is called during the object creation?
What is "this" keyword in java ?
What is "super" keyword in java? How many possible way can you use?
What is JVM stand for ?
Is JVM platform independent?
What version of java are you using?
What is JAR stand for ?
What is the difference between JDK and JVM?
What is the difference between JVM and JRE?
What is compile time and run time?
What is heap?
How java manage it's memory?
What is the difference between String, StringBuffer and StringBuilder?
What is Singleton class?
What is Serialization and Deserialization?
when to use transient variable in java?
Difference between while and do..while loop?
What is Enum?
What is Iterator?
Which one will take more memory, an int or Integer?
Why is String Immutable in Java?
What is constructor chaining in Java?
The difference between Serial and Parallel Garbage Collector?
What is JIT stands for?
Explain Java Heap space and Garbage collection?
Can you guarantee the garbage collection process?
What is the difference between stack and heap in Java?
What is reflection in java and why is it useful?
what is multithreading in java?
What is the use of synchronization in Java?
What is Framework?
What are the testing Framework available in java?
Difference between jUnit and testNG?
What are the dependencies for this project?
what is dependency injection in java?
What is static binding and dynamic binding?









